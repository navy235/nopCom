@model CustomerOrderListModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
}
@using Nop.Web.Models.Customer;
@section left
{
    @Html.Partial("MyAccountNavigation", Model.NavigationModel, new ViewDataDictionary())
}

@section  bread{
    <div class="breadcrumbs">
        <a href="@Url.RouteUrl("CustomerInfo")" >@T("Account.MyAccount") </a>
        &nbsp;&gt;&nbsp; @T("Account.CustomerOrders")
    </div>
}

<div class="order-list">
    <table class="order-table">
        <colgroup>
            <col class="c1">
            <col class="c2">
            <col class="c3">
            <col class="c4">
            <col class="c5">
        </colgroup>
        <thead>
            <tr class="col-name">
                <th>@T("Account.CustomerOrders.Product")</th>
                <th>@T("Account.CustomerOrders.OrderTotal")</th>
                <th>
                    @Html.DropDownList("orderstatus-select", Model.CustomerOrderFilteringModel.AvailableOrderStatuses, new { onchange = "setLocation(this.value);" })
                </th>
                <th>@T("Account.CustomerOrders.Control")</th>
                <th>@T("Account.CustomerOrders.OtherControl")</th>
            </tr>
        </thead>
        @if (Model.Orders.Count > 0)
        {
            foreach (var order in Model.Orders)
            {
            <tbody  data-orderid="@order.Id">
                <tr class="order-hd">
                    <td colspan="5">
                        <i class="icon-te"></i>
                        <span class="num">@T("Account.CustomerOrders.OrderNumber")：
                            <a href="@Url.RouteUrl("OrderDetails", new { orderId = order.Id })" target="_blank">@order.Id</a>
                            <em class="type">&nbsp;&nbsp;</em>
                        </span>
                        <span class="time">@T("Account.CustomerOrders.OrderDate")：@order.CreatedOn.ToString("yyyy-MM-dd HH:mm:ss")</span>
                    </td>
                </tr>

                @{
                var products = order.OrderItems;
                var itemcount = products.Count;
               
                }

                @for (var i = 0; i < itemcount; i++)
                {
                    var product = products[i];
                    <tr class="order-bd">
                        <td class="goods">
                            <a class="goods-pic" href="@Url.RouteUrl("Product", new { SeName = product.ProductSeName })" target="_blank">
                                <img src="@product.ProductUrl"  alt="@product.ProductName"></a>
                            <div class="goods-info">
                                <a class="goods-name" href="@Url.RouteUrl("Product", new { SeName = product.ProductSeName })" target="_blank">@product.ProductName</a>
                                <div class="goods-attr">
                                    @Html.Raw(product.AttributeInfo)
                                </div>
                            </div>
                        </td>
                        @if (i == 0)
                        {
                            <td class="price" rowspan="@itemcount">
                                <p>
                                    <strong>@order.OrderTotal</strong>
                                </p>
                                @*    <p>（含运费：¥10.00）</p>
                                <p>在线支付</p>*@
                            </td>
                            <td class="state" rowspan="@itemcount">
                                <p class="purple">
                                    <span style="color: gray">@order.OrderStatus</span>
                                </p>

                                <a href="@Url.RouteUrl("OrderDetails", new { orderId = order.Id })" target="_blank">
                                    @T("Account.CustomerOrders.OrderDetails")</a>
                            </td>
                            <!-- 菜单订单信息 -->
                            <td class="control" rowspan="@itemcount"></td>
                            <td class="other" rowspan="@itemcount">
                                @if (order.IsReturnRequestAllowed)
                                {
                                    <a href="@Url.RouteUrl("ReturnRequest", new { orderId = order.Id })" >
                                        @T("Account.CustomerOrders.ReturnItems")</a>
                                }
                            </td>
                        }
                        <!-- 菜单订单信息  结束-->
                    </tr>
                }
            </tbody>
            }
        }

        else
        {
            <tbody>
                <tr class="order-empty">
                    <td colspan="5">
                        @T("Account.CustomerOrders.NoOrders")
                    </td>
                </tr>
            </tbody>
          
        }
    </table>
</div>

<div class="pagination-area">
    @Html.Pager(Model.CustomerOrderFilteringModel).QueryParam("pagenumber")
</div>

@if (Model.RecurringOrders.Count > 0)
{

    using (Html.BeginForm())
    {


    <div class="section recurring-payments">
        <div class="title">
            <strong>@T("Account.CustomerOrders.RecurringOrders")</strong>
        </div>
        <div id="legend">
            <legend></legend>
        </div>


        <div id="cart_items">


            <div class="table-responsive cart_info">
                <table class="table table-condensed">
                    <thead>
                        <tr class="cart_menu">
                            <td class="a-center start-date">
                                @T("Account.CustomerOrders.RecurringOrders.StartDate")
                            </td>
                            <td class="a-center cycle-info">
                                @T("Account.CustomerOrders.RecurringOrders.CycleInfo")
                            </td>
                            <td class="a-center next-payment">
                                @T("Account.CustomerOrders.RecurringOrders.NextPayment")
                            </td>
                            <td class="a-center total-cycles">
                                @T("Account.CustomerOrders.RecurringOrders.TotalCycles")
                            </td>
                            <td class="a-center cycles-remaining">
                                @T("Account.CustomerOrders.RecurringOrders.CyclesRemaining")
                            </td>
                            <td class="a-center initial-order">
                                @T("Account.CustomerOrders.RecurringOrders.InitialOrder")
                            </td>
                            <td class="a-center cancel">
                                @T("Account.CustomerOrders.RecurringOrders.Cancel")
                            </td>


                        </tr>


                    </thead>
                    <tbody>
                        @foreach (var item in Model.RecurringOrders)
                        {
                            <tr>
                                <td class="a-center start-date">
                                    @item.StartDate
                                </td>
                                <td class="a-center cycle-info">
                                    @item.CycleInfo
                                </td>
                                <td class="a-center next-payment">
                                    @item.NextPayment
                                </td>
                                <td class="a-center total-cycles">
                                    @item.TotalCycles
                                </td>
                                <td class="a-center cycles-remaining">
                                    @item.CyclesRemaining
                                </td>
                                <td class="a-center initial-order">
                                    <a href="@Url.RouteUrl("OrderDetails", new { orderId = item.InitialOrderId })">@string.Format(T("Account.CustomerOrders.RecurringOrders.ViewInitialOrder").Text, item.InitialOrderId)</a>
                                </td>
                                <td class="a-center cancel">
                                    @if (item.CanCancel)
                                    {
                                        <input type="submit" name="cancelRecurringPayment@(item.Id)" value="@T("Account.CustomerOrders.RecurringOrders.Cancel")" class="button-2 cancel-recurring-order-button" />
                                    }
                                </td>
                            </tr>         
                        }

                    </tbody>
                </table>
            </div>

        </div>











    </div>
    }
    if (Model.CancelRecurringPaymentErrors.Count > 0)
    {
    <div class="alert alert-danger message-error">

        @for (int i = 0; i < Model.CancelRecurringPaymentErrors.Count; i++)
        {
            <div>@Model.CancelRecurringPaymentErrors[i]</div>
        }


    </div>
    }
}


