@model SubmitReturnRequestModel
@using Nop.Web.Models.Order;
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.ReturnItems").Text);
}

@section left
{
    @Html.Partial("MyAccountNavigation", Model.NavigationModel, new ViewDataDictionary())
}

@section  bread{
    <div class="breadcrumbs">
        <a href="@Url.RouteUrl("CustomerInfo")" >@T("Account.MyAccount") </a>
        &nbsp;&gt;&nbsp; @string.Format(T("ReturnRequests.Title").Text, Model.OrderId)
    </div>
}





<div class="order-list">


    @if (!String.IsNullOrEmpty(Model.Result))
    {
        <div class="form-result-tips">
            <i class="icon-help"></i>
            @Model.Result
            <a href="javascript:void(0);" onclick="$(this).parent().hide()"><i class="icon-help-close"></i></a>
        </div>
    }

    @using (Html.BeginForm())
    {
        <div class="form-container bordered">
            <div class="form-header">
                <h3 class="bg">@T("ReturnRequests.SelectProduct(s)")</h3>
            </div>
            <table class="return-table">
                <colgroup>
                    <col class="c1">
                    <col class="c2">
                    <col class="c3">
                </colgroup>
                <thead>
                    <tr class="col-name">
                        <th>@T("ReturnRequests.Products.Name")</th>
                        <th>@T("ReturnRequests.Products.Price")</th>
                        <th>@T("ReturnRequests.Products.Quantity")</th>
                    </tr>
                </thead>

                @if (Model.Items.Count > 0)
                {

                    for (int i = 0; i < Model.Items.Count; i++)
                    {
                        var item = Model.Items[i];
                    
                    <tbody>

                        <tr @(i % 2 == 0 ? Html.Raw(" class=\"order-bd odd\"") : Html.Raw(" class=\"order-bd even\""))>

                            <td class="goods">
                                <a class="goods-pic" href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" target="_blank">
                                    <img src="@item.PictureUrl"  alt="@item.ProductName"></a>
                                <div class="goods-info">
                                    <a class="goods-name" href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" target="_blank">@item.ProductName</a>
                                    <div class="goods-attr">
                                        @Html.Raw(item.AttributeInfo)
                                    </div>
                                </div>
                            </td>
                            <td class="a-left price">
                                @item.UnitPrice
                            </td>
                            <td class="a-left quantity">
                                <select name="quantity@(item.Id)" class="ui-select">
                                    @for (int j = 0; j <= item.Quantity; j++)
                                    {
                                        <option value="@(j)">@(j)</option>
                                    }
                                </select>
                            </td>

                        </tr>
                    </tbody>
                    }
                }

            </table>
        </div>

        <div class="form-container bordered">
            <div class="form-header">
                <h3 class="bg">@T("ReturnRequests.WhyReturning")</h3>
            </div>


            <div class="form-group clearfix ">
                <label class="form-label">
                    @T("ReturnRequests.ReturnReason")</label>

                @Html.DropDownListFor(model => model.ReturnReason, Model.AvailableReturnReasons)

            </div>

            <div class="form-group clearfix ">
                <label class="form-label">
                    @T("ReturnRequests.ReturnAction")</label>

                @Html.DropDownListFor(model => model.ReturnAction, Model.AvailableReturnActions)

            </div>

            <div class="form-group form-group-textarea clearfix ">
                <label class="form-label">
                    @Html.RequiredHint()
                    @T("ReturnRequests.Comments")</label>

                @Html.TextAreaFor(model => model.Comments, new { @class = "ui-input textarea " })
                <span class="ui-tooltips arrow-left-center warning hidden">
                    <i class="icon"></i>
                    @Html.ValidationMessageFor(model => model.Comments)
                </span>
            </div>

            <div class="form-submit">
                <input type="submit" value="@T("Common.Save")" name="save-info-button" class="ui-button primary huge" />
            </div>
        </div>
    }

</div>



